name: ci build

on: [pull_request]

env:
  CURRENT_TOOL: 'openssl'

jobs:
  prejob:
    runs-on: ubuntu-latest
    outputs:
      tool: ${{ steps.setvar.outputs.envvar }}
    steps:
      - id: setvar
        run: echo "::set-output name=envvar::$CURRENT_TOOL"

  alpine-bsdtar-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='bsdtar' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./bsdtar/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './bsdtar/release/body.md'
          artifacts: './bsdtar/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-pcre2grep-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='pcre2grep' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./pcre2grep/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './pcre2grep/release/body.md'
          artifacts: './pcre2grep/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-openssl-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='openssl' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./openssl/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './openssl/release/body.md'
          artifacts: './openssl/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-far2l-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='far2l' }}

    runs-on: ubuntu-latest
    container: alpine:3.15.0

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: |
          apk add --no-cache bash
          ./far2l/build.sh

      - uses: actions/upload-artifact@v1
        with:
          name: far2l-linux
          path: ./far2l/release/build/

  ubuntu-far2l-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='far2l' }}

    runs-on: ubuntu-latest
    container: ubuntu:20.04

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: ./far2l_deb/build.sh

      - uses: actions/upload-artifact@v1
        with:
          name: far2l-linux-glibc
          path: ./far2l_deb/release/build/
