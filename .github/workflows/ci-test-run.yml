name: ci build

on: [pull_request]

env:
  CURRENT_TOOL: 'far2l'

jobs:
  prejob:
    runs-on: ubuntu-latest
    outputs:
      tool: ${{ steps.setvar.outputs.envvar }}
    steps:
      - id: setvar
        run: echo "::set-output name=envvar::$CURRENT_TOOL"

  alpine-bsdtar-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='bsdtar' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./bsdtar/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './bsdtar/release/body.md'
          artifacts: './bsdtar/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-pcre2grep-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='pcre2grep' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./pcre2grep/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './pcre2grep/release/body.md'
          artifacts: './pcre2grep/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-openssl-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='openssl' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./openssl/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './openssl/release/body.md'
          artifacts: './openssl/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-far2l-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='far2l' }}
    runs-on: ubuntu-latest
    container: alpine:3.12.9

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: |
          apk add --no-cache bash
          ./far2l/build.sh

      - uses: actions/upload-artifact@v1
        with:
          name: far2l-linux-musl
          path: ./far2l/release/far2l_musl.tar.gz

  ubuntu-far2l-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='far2l' }}
    runs-on: ubuntu-latest
    container: ubuntu:18.04

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: ./far2l_deb/build.sh

      - uses: actions/upload-artifact@v1
        with:
          name: far2l-linux-glibc
          path: ./far2l_deb/release/far2l_glibc.tar.gz

  alpine-far2l-test:
    needs: [alpine-far2l-linux, ubuntu-far2l-linux]

    runs-on: ubuntu-latest
    container: alpine:3.15.0

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-musl
          path: musl

      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-glibc
          path: glibc

      - name: Test musl build on Alpine
        run: |
          (cd musl && tar -xf ./far2l_musl.tar.gz)
          ldd ./musl/far2l
          ./musl/far2l --help | head -n2

      - name: Test glibc build on Alpine
        run: |
          wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
          wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk
          apk add glibc-2.34-r0.apk
          (cd glibc && tar -xf ./far2l_glibc.tar.gz)
          ldd ./glibc/far2l || true
          ./glibc/far2l --help | head -n2

  ubuntu-far2l-test:
    needs: [alpine-far2l-linux, ubuntu-far2l-linux]

    runs-on: ubuntu-latest
    container: ubuntu:20.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-musl
          path: musl
      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-glibc
          path: glibc

      - name: Test glibc build on Ubuntu
        run: |
          (cd glibc && tar -xf ./far2l_glibc.tar.gz)
          ldd ./glibc/far2l
          ./glibc/far2l --help | head -n2

      - name: Test musl build on Ubuntu
        run: |
          apt update
          apt -y install musl
          ln -s /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1
          (cd musl && tar -xf ./far2l_musl.tar.gz)
          ldd ./musl/far2l
          ./musl/far2l --help | head -n2

  far2l-release:
    needs: [alpine-far2l-test, ubuntu-far2l-test]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-musl
          path: .
      - uses: actions/download-artifact@v2
        with:
          name: far2l-linux-glibc
          path: .
      - uses: ncipollo/release-action@v1
        with:
          tag: 'far2l-2.4.0-beta'
          body: 'farl without plugins'
          artifacts: '*.tar.gz'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
