name: ci build

on: [pull_request, workflow_dispatch]

jobs:
  prejob:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      tool: ${{ steps.setvar.outputs.envvar }}
    steps:
      - id: setvar
        run: |
          echo ${{ secrets._CURRENT_TOOL }} > CI_ENV
          echo "::set-output name=envvar::$(sed -e 's/^_//' CI_ENV)"
      - run: echo CURRENT_TOOL '${{ steps.setvar.outputs.envvar }}'

  bsdtar-alpine-musl:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='bsdtar' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./bsdtar/build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: bsdtar-alpine-musl
          path: |
            ./bsdtar/release/_musl.tar.gz

  bsdtar-windows-mingw:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='bsdtar' }}
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        shell: cmd
        run: .tools\busybox64.exe sh bsdtar\build_mingw.sh

      - uses: actions/upload-artifact@v3
        with:
          name: bsdtar-windows-mingw
          path: |
             ./bsdtar/release/_mingw.tar.gz

  bsdtar-alpine-test:
    needs: bsdtar-alpine-musl
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bsdtar-alpine-musl
          path: .

      - name: Test musl build on Alpine
        run: |
          tar -xf ./_musl.tar.gz
          ./bsdtar --version

  bsdtar-windows-test:
    needs: bsdtar-windows-mingw
    runs-on: windows-2022
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bsdtar-windows-mingw
          path: .

      - name: Test mingw build on Windows
        shell: cmd
        run: |
          tar -xf .\_mingw.tar.gz
          .\bsdtar.exe --version

  bsdtar-release:
    runs-on: ubuntu-latest
    needs: [bsdtar-alpine-test, bsdtar-windows-test]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bsdtar-alpine-musl
          path: .
      - uses: actions/download-artifact@v2
        with:
          name: bsdtar-windows-mingw
          path: .
      - run: |
          tar -xf ./_musl.tar.gz
          tar -xf ./_mingw.tar.gz
          cat _musl.md >> body.md
          cat _mingw.md >> body.md
      - uses: ncipollo/release-action@v1
        with:
          tag: 'bsdtar-3.6.0'
          artifacts: './bsdtar*'
          bodyFile: './body.md'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  alpine-pcre2grep-linux:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='pcre2grep' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./pcre2grep/build.sh

      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.build.outputs.tool_name }}-${{ steps.build.outputs.tool_version }}'
          bodyFile: './pcre2grep/release/body.md'
          artifacts: './pcre2grep/release/${{ steps.build.outputs.tool_name }}'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

