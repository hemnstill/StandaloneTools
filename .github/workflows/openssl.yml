name: openssl build

on: [pull_request, workflow_dispatch]

env:
  IMAGE_NAME: mcr.microsoft.com/windows/nanoserver:ltsc2022-amd64

jobs:
  prejob:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      tool: ${{ steps.setvar.outputs.envvar }}
    steps:
      - id: setvar
        run: |
          echo ${{ secrets._CURRENT_TOOL }} > CI_ENV
          echo "::set-output name=envvar::$(sed -e 's/^_//' CI_ENV)"
      - run: echo CURRENT_TOOL '${{ steps.setvar.outputs.envvar }}'

  openssl-alpine-musl:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='openssl' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./openssl/build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: openssl-alpine-musl
          path: |
             ./openssl/release/_musl.tar.gz

  openssl-alpine-mingw:
    needs: prejob
    if: ${{ needs.prejob.outputs.tool=='openssl' }}
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/checkout@v2
      - name: build
        id: build
        run: |
          apk add --no-cache bash
          ./openssl/build_mingw.sh

      - uses: actions/upload-artifact@v3
        with:
          name: openssl-alpine-mingw
          path: |
             ./openssl/release/_mingw.tar.gz

  openssl-alpine-test:
    needs: openssl-alpine-musl
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: openssl-alpine-musl
          path: .

      - name: Test musl build on Alpine
        run: |
          tar -xf ./_musl.tar.gz
          ./openssl version

  openssl-nanoserver-test:
    needs: openssl-alpine-mingw
    runs-on: windows-2022
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: openssl-alpine-mingw
          path: .
      - run: tar -xf .\_mingw.tar.gz

      - name: pull windows container ${{ env.IMAGE_NAME }}
        shell: cmd
        run: |
          docker pull ${{ env.IMAGE_NAME }}
          docker images ${{ env.IMAGE_NAME }}

      - name: Test mingw build on Nanoserver
        shell: cmd
        run: >
          docker container run --rm -v ${{ github.workspace }}:C:\app ${{ env.IMAGE_NAME }}
          C:\app\openssl.exe version

  openssl-release:
    runs-on: ubuntu-latest
    needs: [openssl-alpine-test, openssl-nanoserver-test]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: openssl-alpine-musl
          path: .
      - uses: actions/download-artifact@v2
        with:
          name: openssl-alpine-mingw
          path: .
      - run: |
          tar -xf ./_musl.tar.gz
          tar -xf ./_mingw.tar.gz
          cat _musl.md >> body.md
          cat _mingw.md >> body.md
      - uses: ncipollo/release-action@v1
        with:
          tag: 'openssl-3.0.1'
          artifacts: './openssl*'
          bodyFile: './body.md'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
